import re

def decimal_to_u64_le_array_str(decimal_str):
    """
    将十进制数字字符串转换为 Fr::from_raw([u64_le_hex_array_str]) 格式的字符串。
    数组是小端序的，包含四个 u64 元素，每个元素都表示为十六进制字符串。
    """
    try:
        n = int(decimal_str)
    except ValueError:
        # 如果数字字符串无效，则返回原始宏调用以避免破坏代码
        print(f"Warning: Could not parse number: {decimal_str}")
        return f'new_bn254_fr!("{decimal_str}")'


    if n < 0:
        # Fr 元素通常是非负的，或者是在一个有限域内取模表示。
        # 这里假设输入是规范的域元素表示 (0 到 P-1)。
        # 提供的所有输入都是正数。
        print(f"Warning: Negative number encountered: {decimal_str}. Conversion might not be as expected for Fr types.")
        # 对于负数如何转换为 Fr，需要更明确的规则，此处简单按正数处理其绝对值或按 twos-complement for 256bit
        # 但通常 Fr::from_raw 期望的是 canonical representation。
        # 为了安全起见，可以选择不转换或抛出错误。这里我们选择不转换，并返回原样。
        # return f'new_bn254_fr!("{decimal_str}")' # 或者抛出错误
        # 考虑到BN254 Fr通常是0..p-1, 负数不直接出现
        raise ValueError(f"Negative numbers ('{decimal_str}') are not directly supported for Fr::from_raw conversion without modulus info.")


    parts = []
    for _ in range(4):
        parts.append(n & 0xFFFFFFFFFFFFFFFF)  # 取最低64位
        n >>= 64  # 右移64位

    # 检查数字是否对于256位来说过大。BN254的Fr元素大约是254位。
    if n != 0:
        # 这表明原始数字大于 2^256 - 1
        # 对于BN254中有效的Fr字段元素，这不应该发生，因为模数较小。
        print(f"Warning: Number {decimal_str} was larger than 256 bits. Remainder: {hex(n)}")

    # 将每个 u64 部分格式化为十六进制字符串 (例如, "0x5", "0x0", "0xabcd1234efgh5678")
    hex_parts = [f"0x{part:x}" for part in parts]
    
    # 构造 Fr::from_raw([...]) 字符串
    return f"Fr::from_raw([{', '.join(hex_parts)}])"

def convert_rust_code_bn254_fr_macros(rust_code):
    """
    转换 Rust 代码字符串，将所有 new_bn254_fr!("NUMBER_STR") 宏
    替换为 Fr::from_raw([u64_le_array])。
    """
    
    # 正则表达式用于查找 new_bn254_fr!("...")
    # 它匹配宏名，后面可能跟着空格，然后是括号，括号内是引号包围的数字字符串。
    # 数字字符串本身可能由于Rust代码格式化而包含换行和空格，但在此示例中数字是连续的。
    # 我们捕获引号内的数字字符串。
    
    def replacement_function(match):
        # 捕获到的数字字符串在第一个分组中
        number_str_in_quotes = match.group(1)
        # 清理数字字符串，移除可能存在的因代码换行符或多余空格（尽管本例中数字很紧凑）
        cleaned_number_str = "".join(number_str_in_quotes.split())
        return decimal_to_u64_le_array_str(cleaned_number_str)

    # pattern = r'new_bn254_fr!\s*\(\s*"((?:\s*\d+\s*)+)"\s*\)' # 更复杂的，处理数字中可能的分隔
    pattern = r'new_bn254_fr!\s*\(\s*"(\d+)"\s*\)' # 简单模式，假设数字是连续的

    modified_code = re.sub(pattern, replacement_function, rust_code)
    return modified_code

# # 您提供的 Rust 源代码
# rust_code_input = """
# use crate::anemoi_hash::AnemoiJive;
# use halo2_curves::bn256::Fr;

# /// The structure that stores the parameters for the Anemoi-Jive hash function for BN254.
# pub struct AnemoiJive256;

# impl AnemoiJive<Fr, 2usize, 14usize> for AnemoiJive256 {
#     const ALPHA: u32 = 5u32;
#     const GENERATOR: Fr = Fr::from_raw([0x05, 0x00, 0x00, 0x00]);
#     const GENERATOR_INV: Fr = new_bn254_fr!(
#         "8755297148735710088898562298102910035419345760166413737479281674630323398247"
#     );
#     const GENERATOR_SQUARE_PLUS_ONE: Fr = new_bn254_fr!("26");
#     const ROUND_KEYS_X: [[Fr; 2]; 14] = [
#         [
#             new_bn254_fr!("37"),
#             new_bn254_fr!(
#                 "3751828524803055471428227881618625174556947755988347881191159153764975591158"
#             ),
#         ],
#         [
#             new_bn254_fr!(
#                 "13352247125433170118601974521234241686699252132838635793584252509352796067497"
#             ),
#             new_bn254_fr!(
#                 "21001839722121566863419881512791069124083822968210421491151340238400176843969"
#             ),
#         ],
#         [
#             new_bn254_fr!(
#                 "8959866518978803666083663798535154543742217570455117599799616562379347639707"
#             ),
#             new_bn254_fr!(
#                 "21722442537234642741320951134727484119993387379465291657407115605240150584902"
#             ),
#         ],
#         [
#             new_bn254_fr!(
#                 "3222831896788299315979047232033900743869692917288857580060845801753443388885"
#             ),
#             new_bn254_fr!(
#                 "5574110054747610058729632355948568604793546392090976147435879266833412620404"
#             ),
#         ],
#         [
#             new_bn254_fr!(
#                 "11437915391085696126542499325791687418764799800375359697173212755436799377493"
#             ),
#             new_bn254_fr!(
#                 "19347108854758320361854968987183753113398822331033233961719129079198795045322"
#             ),
#         ],
#         [
#             new_bn254_fr!(
#                 "14725846076402186085242174266911981167870784841637418717042290211288365715997"
#             ),
#             new_bn254_fr!(
#                 "17733032409684964025894538244134113560864261458948810209753406163729963104066"
#             ),
#         ],
#         [
#             new_bn254_fr!(
#                 "3625896738440557179745980526949999799504652863693655156640745358188128872126"
#             ),
#             new_bn254_fr!(
#                 "16641102106808059030810525726117803887885616319153331237086309361060282564245"
#             ),
#         ],
#         [
#             new_bn254_fr!(
#                 "463291105983501380924034618222275689104775247665779333141206049632645736639"
#             ),
#             new_bn254_fr!(
#                 "9245970744804222215259369270991414441925747897718226734085751033703871913242"
#             ),
#         ],
#         [
#             new_bn254_fr!(
#                 "17443852951621246980363565040958781632244400021738903729528591709655537559937"
#             ),
#             new_bn254_fr!(
#                 "18243401795478654990110719981452738859015913555820749188627866268359980949315"
#             ),
#         ],
#         [
#             new_bn254_fr!(
#                 "10761214205488034344706216213805155745482379858424137060372633423069634639664"
#             ),
#             new_bn254_fr!(
#                 "18200337361605220875540054729693479452916227111908726624753615870884702413869"
#             ),
#         ],
#         [
#             new_bn254_fr!(
#                 "1555059412520168878870894914371762771431462665764010129192912372490340449901"
#             ),
#             new_bn254_fr!(
#                 "5239065275003145843160321807696531775964858360555566589197008236687533209496"
#             ),
#         ],
#         [
#             new_bn254_fr!(
#                 "7985258549919592662769781896447490440621354347569971700598437766156081995625"
#             ),
#             new_bn254_fr!(
#                 "9376351072866485300578251734844671764089160611668390200194570180225759013543"
#             ),
#         ],
#         [
#             new_bn254_fr!(
#                 "9570976950823929161626934660575939683401710897903342799921775980893943353035"
#             ),
#             new_bn254_fr!(
#                 "6407880900662180043240104510114613236916437723065414158006054747177494383655"
#             ),
#         ],
#         [
#             new_bn254_fr!(
#                 "17962366505931708682321542383646032762931774796150042922562707170594807376009"
#             ),
#             new_bn254_fr!(
#                 "6245130621382842925623937534683990375669631277871468906941032622563934866013"
#             ),
#         ],
#     ];
#     const ROUND_KEYS_Y: [[Fr; 2]; 14] = [
#         [
#             new_bn254_fr!(
#                 "8755297148735710088898562298102910035419345760166413737479281674630323398284"
#             ),
#             new_bn254_fr!(
#                 "16133435893292874812888083849160666046321318009323051176910097996974633748758"
#             ),
#         ],
#         [
#             new_bn254_fr!(
#                 "5240474505904316858775051800099222288270827863409873986701694203345984265770"
#             ),
#             new_bn254_fr!(
#                 "16516377322346822856154252461095180562000423191949949242508439100972699801595"
#             ),
#         ],
#         [
#             new_bn254_fr!(
#                 "9012679925958717565787111885188464538194947839997341443807348023221726055342"
#             ),
#             new_bn254_fr!(
#                 "3513323292129390671339287145562649862242777741759770715956300048086055264273"
#             ),
#         ],
#         [
#             new_bn254_fr!(
#                 "21855834035835287540286238525800162342051591799629360593177152465113152235615"
#             ),
#             new_bn254_fr!(
#                 "5945179541709432313351711573896685950772105367183734375093638912196647730870"
#             ),
#         ],
#         [
#             new_bn254_fr!(
#                 "11227229470941648605622822052481187204980748641142847464327016901091886692935"
#             ),
#             new_bn254_fr!(
#                 "874490282529106871250179638055108647411431264552976943414386206857408624500"
#             ),
#         ],
#         [
#             new_bn254_fr!(
#                 "8277823808153992786803029269162651355418392229624501612473854822154276610437"
#             ),
#             new_bn254_fr!(
#                 "14911320361190879980016686915823914584756893340104182663424627943175208757859"
#             ),
#         ],
#         [
#             new_bn254_fr!(
#                 "20904607884889140694334069064199005451741168419308859136555043894134683701950"
#             ),
#             new_bn254_fr!(
#                 "15657880601171476575713502187548665287918791967520790431542060879010363657805"
#             ),
#         ],
#         [
#             new_bn254_fr!(
#                 "1902748146936068574869616392736208205391158973416079524055965306829204527070"
#             ),
#             new_bn254_fr!(
#                 "14311738005510898661766244714944477794557156116636816483240167459479765463026"
#             ),
#         ],
#         [
#             new_bn254_fr!(
#                 "14452570815461138929654743535323908350592751448372202277464697056225242868484"
#             ),
#             new_bn254_fr!(
#                 "18878429879072656191963192145256996413709289475622337294803628783509021017215"
#             ),
#         ],
#         [
#             new_bn254_fr!(
#                 "10548134661912479705005015677785100436776982856523954428067830720054853946467"
#             ),
#             new_bn254_fr!(
#                 "21613568037783775488400147863112554980555854603176833550688470336449256480025"
#             ),
#         ],
#         [
#             new_bn254_fr!(
#                 "17068729307795998980462158858164249718900656779672000551618940554342475266265"
#             ),
#             new_bn254_fr!(
#                 "2490802518193809975066473675670874471230712567215812226164489400543194289596"
#             ),
#         ],
#         [
#             new_bn254_fr!(
#                 "16199718037005378969178070485166950928725365516399196926532630556982133691321"
#             ),
#             new_bn254_fr!(
#                 "21217120779706380859547833993003263088538196273665904984368420139631145468592"
#             ),
#         ],
#         [
#             new_bn254_fr!(
#                 "19148564379197615165212957504107910110246052442686857059768087896511716255278"
#             ),
#             new_bn254_fr!(
#                 "19611778548789975299387421023085714500105803761017217976092023831374602045251"
#             ),
#         ],
#         [
#             new_bn254_fr!(
#                 "5497141763311860520411283868772341077137612389285480008601414949457218086902"
#             ),
#             new_bn254_fr!(
#                 "19294458970356379238521378434506704614768857764591229894917601756581488831876"
#             ),
#         ],
#     ];
#     const PREPROCESSED_ROUND_KEYS_X: [[Fr; 2]; 14] = [
#         [
#             new_bn254_fr!(
#                 "9875235397644879082677551174832367614794066768374461301425281161472772669364"
#             ),
#             new_bn254_fr!(
#                 "21858645442887666000649962444987448281406846313183347319591597416372520936186"
#             ),
#         ],
#         [
#             new_bn254_fr!(
#                 "16782726861879113354475406688883165555010923651788393550320367281500279757725"
#             ),
#             new_bn254_fr!(
#                 "21716573900346641246759819543810812868751270056692513002115190154768694264248"
#             ),
#         ],
#         [
#             new_bn254_fr!(
#                 "21061966870155710578694816572762821778055453072317217584284979102445184722013"
#             ),
#             new_bn254_fr!(
#                 "4549699248331629386178256801656616048620437157601772274159045439897291365892"
#             ),
#         ],
#         [
#             new_bn254_fr!(
#                 "2305171087224367456066076264392784488317998917489739225874252016996953925819"
#             ),
#             new_bn254_fr!(
#                 "753423837773794493583073069146671816131950370427940330023762710613130114284"
#             ),
#         ],
#         [
#             new_bn254_fr!(
#                 "10698642504920643104042109480794649581252624576357861152208736776268689349977"
#             ),
#             new_bn254_fr!(
#                 "15861688217704403960557684449792840983848058583334483774016142194529689550996"
#             ),
#         ],
#         [
#             new_bn254_fr!(
#                 "423541189543553676504695293714968243652665955997218133034093874913252335294"
#             ),
#             new_bn254_fr!(
#                 "2085108831563138776622770735491169518313516126676144009754728151028847503805"
#             ),
#         ],
#         [
#             new_bn254_fr!(
#                 "9296577236668306825777791135277154873361365777577262330385210251177355111236"
#             ),
#             new_bn254_fr!(
#                 "13116726794489691995858453211791287240125772343837695887860897125838790404152"
#             ),
#         ],
#         [
#             new_bn254_fr!(
#                 "7770554041004090339324059898697839176238158454150868392168895497050756225989"
#             ),
#             new_bn254_fr!(
#                 "15470974097886414257515842937693682793336718238774806265675536486339112492265"
#             ),
#         ],
#         [
#             new_bn254_fr!(
#                 "2027607608657541590621559284719638781643880713344167215688101555484801034021"
#             ),
#             new_bn254_fr!(
#                 "17300926706027606418491168431313029799747253325902468045764528997217592945985"
#             ),
#         ],
#         [
#             new_bn254_fr!(
#                 "15221128912303148791281337033495862121987426916739733934930599252800117682974"
#             ),
#             new_bn254_fr!(
#                 "13613239587442289301259781578364994509804749661959905633737037792945804710990"
#             ),
#         ],
#         [
#             new_bn254_fr!(
#                 "12005763401209949733243841400657315836955319000163295072425874164656732641981"
#             ),
#             new_bn254_fr!(
#                 "22705376494938444016386495814792101413510899935471717349511104697970912694"
#             ),
#         ],
#         [
#             new_bn254_fr!(
#                 "14955552946683837036542615852864240457364059063741425926890312579929291591324"
#             ),
#             new_bn254_fr!(
#                 "288970556961158641815624492891121300982160056362935242882312884201067196942"
#             ),
#         ],
#         [
#             new_bn254_fr!(
#                 "1581177506494232880889471258607800990368585397168021361552725068313737403708"
#             ),
#             new_bn254_fr!(
#                 "17981970841153864433894117072118866447373490474241757839845618545859583545511"
#             ),
#         ],
#         [
#             new_bn254_fr!(
#                 "13826749781571877127981823420956728751726595679537198790271191951241691704832"
#             ),
#             new_bn254_fr!(
#                 "21456423298419106344829058807152140321464760141466308742744827391066120856237"
#             ),
#         ],
#     ];
#     const PREPROCESSED_ROUND_KEYS_Y: [[Fr; 2]; 14] = [
#         [
#             new_bn254_fr!(
#                 "13004335645468876947782817511996516830557692388848756239167689579223703209154"
#             ),
#             new_bn254_fr!(
#                 "11864075285365324632501660503932294097119662259150439783414276164786389548361"
#             ),
#         ],
#         [
#             new_bn254_fr!(
#                 "7862495485034485030006053329979953690634378679977822019470434513025641948468"
#             ),
#             new_bn254_fr!(
#                 "21778305909519758427732388472275509688429815430677336887808798633722753860845"
#             ),
#         ],
#         [
#             new_bn254_fr!(
#                 "12931102024200069317238425826876622077088120606615813415940805446744126635881"
#             ),
#             new_bn254_fr!(
#                 "7837661096836606004314569173269958689435480650877562806125674115879275837181"
#             ),
#         ],
#         [
#             new_bn254_fr!(
#                 "14988274660376568290931678743130590897577302840578069596030418254228064426148"
#             ),
#             new_bn254_fr!(
#                 "14818345905108638164688641616372585080538194792946547345972306256783653004291"
#             ),
#         ],
#         [
#             new_bn254_fr!(
#                 "11966397199239721279456793945370572038235535122896503364930899557716957223959"
#             ),
#             new_bn254_fr!(
#                 "2853352834541474475776137785488700155363788984994460875907827022572233875584"
#             ),
#         ],
#         [
#             new_bn254_fr!(
#                 "6473747423912923573021858532418794714202395821695920085715793777854113577052"
#             ),
#             new_bn254_fr!(
#                 "14603107593725024233314048684876188310197903996220843563409821502003190608529"
#             ),
#         ],
#         [
#             new_bn254_fr!(
#                 "10018141451544555380964804958767235988622088919781088363105734833991047400353"
#             ),
#             new_bn254_fr!(
#                 "83445762062875740982996603123888928543771735703494814377210678846969285492"
#             ),
#         ],
#         [
#             new_bn254_fr!(
#                 "4853894954678028326595990416033041454601372518726024075995342652050367914374"
#             ),
#             new_bn254_fr!(
#                 "13529950793291157200862531998635554831775405064348392294420225414209107516565"
#             ),
#         ],
#         [
#             new_bn254_fr!(
#                 "2807960038839395770936423062783538297061734914581689261511199436908401205594"
#             ),
#             new_bn254_fr!(
#                 "2959287061458222329954767340179788517820610776269329086252152135975612854535"
#             ),
#         ],
#         [
#             new_bn254_fr!(
#                 "1011199386146110957860470152252409466117369100436101125582703221610204956433"
#             ),
#             new_bn254_fr!(
#                 "11916226082408980147601015423483352131731691070197152337036758512414772646884"
#             ),
#         ],
#         [
#             new_bn254_fr!(
#                 "6143620485513326860817743193060169274247928932037486340946124795304534640217"
#             ),
#             new_bn254_fr!(
#                 "9249411266687228683218385140647077689008430999582930158150164394401064685612"
#             ),
#         ],
#         [
#             new_bn254_fr!(
#                 "3865024776110368315374386772707941373393630458661571912715432285796031519218"
#             ),
#             new_bn254_fr!(
#                 "1124707246745155402135444593036779382685949620543378002907953793036433309720"
#             ),
#         ],
#         [
#             new_bn254_fr!(
#                 "3747281796037953947554825537973345299481414684769676458997083724683939123632"
#             ),
#             new_bn254_fr!(
#                 "516368516371014501734378213574699667472834788768584825363152893957289265859"
#             ),
#         ],
#         [
#             new_bn254_fr!(
#                 "8415215912404504262033404854405294287543393294861880020399730040978826989992"
#             ),
#             new_bn254_fr!(
#                 "10041866203038674311709434184968252713427481340634280330144689403763670911641"
#             ),
#         ],
#     ];
#     const MDS_MATRIX: [[Fr; 2]; 2] = [
#         [new_bn254_fr!("1"), new_bn254_fr!("5")],
#         [new_bn254_fr!("5"), new_bn254_fr!("26")],
#     ];

#     const USE_PHT: bool = true;

#     fn get_alpha_inv() -> Vec<u64> {
#         vec![
#             14981214993055009997u64,
#             6006880321387387405u64,
#             10624953561019755799u64,
#             2789598613442376532u64,
#         ]
#     }
# }
# """


salt = '''
use noah_algebra::bn254::BN254Scalar;
use noah_algebra::new_bn254_fr;

/// The salts for the Anemoi-Jive CRH over BN254.
///
/// The salts are generated with the following code.
/// let salts = generate_salts::<ark_bn254::Fr>(&ark_bn254::Fr::from(5u64), 5u32, 64);
///
pub const ANEMOI_JIVE_BN254_SALTS: [BN254Scalar; 64] = [
    new_bn254_fr!("18669123701021663289768716605572940533841067322890687132460921184669108159542"),
    new_bn254_fr!("10390679967938277275989684868487092127801068901240914768344055197087619633885"),
    new_bn254_fr!("19883442743339106090987471588737169727815598196913370868766494998684506984421"),
    new_bn254_fr!("3730138783484756388811792455984417958176878129182832943279481355801360220380"),
    new_bn254_fr!("9797165091148010492820855129233009464678679155807475931261637651473665793274"),
    new_bn254_fr!("14147531427328705000894711857131607315655245308346204197731669275174286560531"),
    new_bn254_fr!("16602447838907982326132066836689196198804408574834345128340941396105883467706"),
    new_bn254_fr!("4215251241662032812755547286266186654863276402742103477894128013683255374291"),
    new_bn254_fr!("4557347667639183958469153435933016313465390644372925397474803141933431636828"),
    new_bn254_fr!("16988903628751761710375028152937616143909518898389766067484630068252934571231"),
    new_bn254_fr!("8219875187621025483030362499259506191442992547080625825072901591699306424033"),
    new_bn254_fr!("11410372705703932116816420913644385610356027914389929219400840786583060509465"),
    new_bn254_fr!("1674775149915797045399591518715192306245477279040157035018066247605392412059"),
    new_bn254_fr!("4316901543462738888213822709504654088955957643383739040268554359357278032594"),
    new_bn254_fr!("4438459019074420594343340813935234443225651672394540941673497035218490231528"),
    new_bn254_fr!("4880148447580499085029192385135808828594123693700173650208817252443551811252"),
    new_bn254_fr!("3654572534901742299434608071136487172223402173022698606893378722029542111381"),
    new_bn254_fr!("13156515613213341296901367790392921969777409767491334908276063770588142215939"),
    new_bn254_fr!("6452991436114917358766099007730572467947619183023601136342815237244064071993"),
    new_bn254_fr!("1886932049114390876569818921067953397689891842625584836589242270518962098902"),
    new_bn254_fr!("15124665271987307835880653429553544611248430717492059343666288019305119768183"),
    new_bn254_fr!("10558050090753267452118711030830330403479891435783079046610166637591440694863"),
    new_bn254_fr!("3237814615373301717534222751597881533823425426474827952798717733824589434148"),
    new_bn254_fr!("11091291514684371963568053856531237720882895576251177769527975162563672579936"),
    new_bn254_fr!("15786983706718295665144528974481083208379191977975947627982251477703512571563"),
    new_bn254_fr!("19644982416384012476277024517281765495578224651311956645179130202631577400593"),
    new_bn254_fr!("4025102970647628625431084964639961535101013771736540072350553714737391197484"),
    new_bn254_fr!("2898601255897152992964256679207055042901217305718180096571259846947826445593"),
    new_bn254_fr!("13276813773020313464921479693505491399843600882666592492794316667291223267043"),
    new_bn254_fr!("8999062903220254118872055995285757544248296697173695099044861768223248697844"),
    new_bn254_fr!("12074689234467890573532580210238722708516053746503096580243967077454222388011"),
    new_bn254_fr!("10464670335954743572165021471288863090572300381757273042923091898713327807292"),
    new_bn254_fr!("7097695238215862016923083557214773681288385768048242678838900038423516177428"),
    new_bn254_fr!("15587109671514453577037511450851150811303511024967391727357451056648207634693"),
    new_bn254_fr!("20793530639662031454825139506535857502208369884899183781914187471129176263343"),
    new_bn254_fr!("12523547748154641112912062470993817532987159568325237252150837920071371356237"),
    new_bn254_fr!("16612760956531245768163040394982834813664676343159296382079390441541386838701"),
    new_bn254_fr!("14014971716754645704841377152772485355123247765779771956431163761087994430640"),
    new_bn254_fr!("16642222639072667102285754864643797721054965897304529508343275153559308093712"),
    new_bn254_fr!("14931757867735237343697647213979439922212443010190310023686258658639088303916"),
    new_bn254_fr!("2405165953832682402794306976652453813626336980623458441674986826375329109987"),
    new_bn254_fr!("12915214512653128538473573296989757719651248848987779805981733258677053858958"),
    new_bn254_fr!("12019123277588827802680841295338401461758161384880810088581817425408015186604"),
    new_bn254_fr!("15129177642993190750648730324056846849578630659469803158436844685292830779422"),
    new_bn254_fr!("7576603569155267169701664530747454513386551805806003708835053732742979956188"),
    new_bn254_fr!("5874395092451781041318107769295797040133572942349991899813211432240849617344"),
    new_bn254_fr!("10962616630227641685192809582891196787653925033748891437720643851191318717953"),
    new_bn254_fr!("21531767306480940702945282427406464988780810059453657291948232836208035427719"),
    new_bn254_fr!("2002411062444998217194766270218623907154842648059935369554958073514562243668"),
    new_bn254_fr!("21319618502633417590736444072403216750509584363047669098295672746200722812164"),
    new_bn254_fr!("17898010572297894128437286373474859003798494583003672626538290943828745423493"),
    new_bn254_fr!("3012583769569988628517279219940234368985843110422915376138972130555218192883"),
    new_bn254_fr!("16996388329010272472148619515861953065363586466632531849661404946717237850545"),
    new_bn254_fr!("7714187534683233516424356227195704175591994508967120449120194845752626732318"),
    new_bn254_fr!("11694127755879556574457080226821634115039406412647189341896113966258492646847"),
    new_bn254_fr!("9658038504929139901518156159573874045285951437123234887245001924340474341219"),
    new_bn254_fr!("18964451839091791390874465855824838317023519574721270721431046283610215312399"),
    new_bn254_fr!("12529383643130382215901783328321866937862401322329606018742848630560435486213"),
    new_bn254_fr!("13372168135445656416576797831689768540564767215050785991233236130866573568533"),
    new_bn254_fr!("10365993564314808289322912011753557628847855219847283679679021452450849479097"),
    new_bn254_fr!("17917053312954433896295151170023494824349800668998381812793490601933440282137"),
    new_bn254_fr!("13414551852304530606105261960575922705942137739462309035600967206347310779830"),
    new_bn254_fr!("7699184699062303228623286890693527111799968891716231258900683354170912650266"),
    new_bn254_fr!("18211816955562949459048071540702096013179251156414329301274825472189906321207"),
];
'''


test1 = '''#[test]
fn test_eval_stream_cipher() {
    type F = BN254Scalar;

    let input = [F::from(1u64), F::from(2u64), F::from(3u64), F::from(4u64)];

    let expect = vec![
        new_bn254_fr!(
            "16130067210949763713397506837063979419501098552211549704252212995440438798911"
        ),
        new_bn254_fr!(
            "18590584568098617896724185569639323829868938535309403007069063053202089323797"
        ),
        new_bn254_fr!(
            "7427714548193519784948478077278071182205330098717288886731852935822331538384"
        ),
        new_bn254_fr!(
            "13626963569912088497291344349536792174753053314620332421784946842426303540601"
        ),
        new_bn254_fr!(
            "5934436484331665251730570275822474366622075032279676505146445889842358848865"
        ),
        new_bn254_fr!(
            "15737389356547749545883600010888859196953327088251528704115120849521328172216"
        ),
        new_bn254_fr!(
            "2098518999685021281661943698742854255835815276942992547535880627233402615577"
        ),
    ];

    let res = AnemoiJive256::eval_stream_cipher(&input, 2);
    assert_eq!(res, expect[..2]);

    let res = AnemoiJive256::eval_stream_cipher(&input, 4);
    assert_eq!(res, expect[..4]);

    let res = AnemoiJive256::eval_stream_cipher(&input, 6);
    assert_eq!(res, expect[..6]);

    let res = AnemoiJive256::eval_stream_cipher(&input, 7);
    assert_eq!(res, expect[..7]);
}
'''

test2 = '''
fn test_anemoi_variable_length_hash() {
    type F = Fr;

    let input = [F::from(1u64), F::from(2u64), F::from(3u64), F::from(4u64)];

    let res = AnemoiJive256::eval_variable_length_hash(&input);
    assert_eq!(
        res,
        new_bn254_fr!(
            "16130067210949763713397506837063979419501098552211549704252212995440438798911"
        )
    );
}
'''


# 执行转换并打印结果
if __name__ == "__main__":
    modified_rust_code = convert_rust_code_bn254_fr_macros(test2)
    print(modified_rust_code)